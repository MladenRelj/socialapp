{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectAction.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","console","log","firestore","ordered","firestoreConnect","collection","limit","orderBy","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","autoComplete","onChange","creds","Credentials","getstate","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","authErr","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","author_id","Date","toDateString","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firebaseReducer","firestoreReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","thunk","withExtraArgument","createStore","applyMiddleware","reduxFirestore","fbconfig","rrfProps","config","userProfile","useFirestoreForProfile","enableRedirectHandling","resetBeforeLogin","createFirestoreInstance","presence","sessions","AuthIsLoaded","children","useSelector","isLoaded","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.d5d042bf.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signOut } from \"../../store/actions/authActions\";\r\n\r\nconst SignedInLinks = (props) => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink\r\n          className=\"hide-on-small-only btn-floating btn-small waves-effect waves  blue-grey darken-1\"\r\n          to=\"/create\"\r\n        >\r\n          <i className=\"material-icons\">add</i>\r\n        </NavLink>\r\n      </li>\r\n      <li>\r\n        <a onClick={props.signOut}>Log Out</a>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/\" className=\"btn  btn-floating grey lighten-1\">\r\n          {props.profile.initials}\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut()),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\r\n","import { getFirebase } from \"react-redux-firebase\";\r\nimport { getFirestore } from \"redux-firestore\";\r\n\r\nexport const signIn = (Credentials) => {\r\n  return (dispatch, getstate, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(Credentials.email, Credentials.password)\r\n      .then(() => {\r\n        dispatch({ type: \"LOGIN_SUCCESS\" });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: \"LOGIN_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signUp = (newUser) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n      .then((resp) => {\r\n        return firestore\r\n          .collection(\"users\")\r\n          .doc(resp.user.uid)\r\n          .set({\r\n            firstName: newUser.firstName,\r\n            lastName: newUser.lastName,\r\n            initials: newUser.firstName[0] + newUser.lastName[0],\r\n          });\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNUP_SUCCESS\" });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: \"SIGNUP_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li className=\"\">\r\n        <NavLink to=\"/signup\">Signup</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/signin\">Login</NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default SignedOutLinks;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SignedInLinks from \"./SignedInLinks\";\r\nimport SignedOutLinks from \"./SignedOutLinks\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Navbar = (props) => {\r\n  const { auth, profile } = props;\r\n\r\n  const links = auth.uid ? (\r\n    <SignedInLinks profile={profile} />\r\n  ) : (\r\n      <SignedOutLinks />\r\n    );\r\n  return (\r\n    <nav className=\"nav-wrapper  grey darken-3\">\r\n\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"brand-logo left\">\r\n          ReactRedux\r\n        </Link>\r\n\r\n        {links}\r\n\r\n      </div>\r\n\r\n    </nav>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from \"react\";\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) => {\r\n  const { notifications } = props;\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content grey lighten-4\">\r\n          <span className=\"card-title\">Notifications</span>\r\n          <ul className=\"notifications\">\r\n            {notifications && notifications.map(item => {\r\n              return (\r\n                <li key={item.id}>\r\n                  <span className=\"\"> {item.user}</span>\r\n                  <span> {item.content}</span>\r\n                  <div className=\"grey-text note-data\">\r\n                    {moment(item.time.toDate()).fromNow()}\r\n                  </div>\r\n                </li>\r\n              )\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst ProjectSummary = ({ project }) => {\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col s12 m12\">\r\n        <div className=\"card blue-grey darken-2\">\r\n          <div className=\"card-content white-text\">\r\n            <span className=\"card-title \">{project.title}</span>\r\n            <p>{project.content}</p>\r\n          </div>\r\n          <div className=\"card-action blue-grey-text text-lighten-4\">\r\n            <div>\r\n              <i>\r\n                Posted by {project.authorFirstName} {project.authorLastName}\r\n              </i>\r\n            </div>\r\n            <div>\r\n              <i>{moment(project.createdAt).calendar()}</i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ProjectSummary;\r\n","import React from \"react\";\r\nimport ProjectSummary from \"./ProjectSummary\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ProjectList = ({ projects }) => {\r\n  return (\r\n    <div className=\" project-list section\">\r\n      {projects &&\r\n        projects.map((project) => {\r\n          return (\r\n            <Link to={\"/project/\" + project.id} key={project.id}>\r\n              <ProjectSummary project={project} key={project.id} />\r\n            </Link>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n// import ItemList from \"../projects/ItemList\";\r\n// import { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport Notifications from \"./Notifications\";\r\nimport ProjectList from \"../projects/ProjectList\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport class Dashboard extends Component {\r\n  render() {\r\n    const { projects, auth, notifications } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s6 m6\">\r\n            <ProjectList projects={projects} />\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col s6 m5 offset-m1\">\r\n              <Notifications notifications={notifications} />\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    {\r\n      collection: \"projects\", limit: 5, orderBy: ['createdAt', 'desc']\r\n    },\r\n    { collection: \"notifications\", limit: 3, orderBy: ['time', 'desc'] }\r\n  ])\r\n)(Dashboard);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nfunction ProjectDetails(props) {\r\n\r\n\r\n    const { project, auth } = props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n    if (project) {\r\n\r\n        return (\r\n\r\n            <div className=\"container section project-details\">\r\n                <div className=\"card-panel z-depth-1  grey lighten-3\">\r\n                    <div className=\"card-content\">\r\n\r\n                        <h4 className=\"card-title\">{project.title}</h4>\r\n                        <p className=\"flow-text transparent\">\r\n                            {project.content}\r\n                        </p>\r\n\r\n                        <div className=\"card-action darken-text text-darken-2\">\r\n                            <div><i>Posted by {project.authorFirstName} {project.authorLastName}</i></div>\r\n                            <div>{moment(project.createdAt).calendar()} </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading project...</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n// mora da ide ownProps jer samo props ne moze\r\nconst mapStateToProps = (state, ownProps) => {\r\n    console.log(state);\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null;\r\n\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    };\r\n};\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {\r\n            collection: \"projects\",\r\n        },\r\n    ])\r\n)(ProjectDetails);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signIn } from \"../../store/actions/authActions\";\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: \"\",\r\n        password: \"\",\r\n    };\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value,\r\n        });\r\n    };\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n        console.log(this.state)\r\n    };\r\n\r\n    render() {\r\n        const { authError, auth } = this.props\r\n        if (auth.uid) return <Redirect to=\"/\" />;\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m4 l8\">\r\n                        <form onSubmit={this.handleSubmit} className=\"transparent\">\r\n                            <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                            <div className=\"input-field input-outlined\">\r\n                                <label className=\" grey-text text-lighten-5\" htmlFor=\"email\">Email</label>\r\n                                <input autoComplete=\"off\" className=\" blue-grey-text text-darken-4\" type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                            </div>\r\n                            <div className=\"input-field\">\r\n                                <label className=\"grey-text text-lighten-5\" htmlFor=\"password\">Password</label>\r\n                                <input autoComplete=\"off\" className=\"blue-grey-text text-darken-4\" type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                            </div>\r\n                            <div className=\"input-field\">\r\n                                <button className=\"waves-effect waves-light btn\">Login</button>\r\n                                <div className=\"red-text center\">\r\n                                    {authError ? <p>{authError}</p> : null}\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds)),\r\n    };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { signUp } from \"../../store/actions/authActions\";\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state);\r\n  };\r\n  render() {\r\n    const { auth, authErr } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"transparent\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n          <div className=\"input-field\">\r\n            <label className=\" grey-text text-lighten-5\" htmlFor=\"firstName\">\r\n              First Name\r\n            </label>\r\n            <input\r\n              autoComplete=\"off\"\r\n              className=\" blue-grey-text text-darken-4\"\r\n              autoComplete=\"off\"\r\n              type=\"text\"\r\n              id=\"firstName\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label className=\" grey-text text-lighten-5\" htmlFor=\"lastName\">\r\n              Last Name\r\n            </label>\r\n            <input\r\n              autoComplete=\"off\"\r\n              className=\" blue-grey-text text-darken-4\"\r\n              autoComplete=\"off\"\r\n              type=\"text\"\r\n              id=\"lastName\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label className=\" grey-text text-lighten-5\" htmlFor=\"email\">\r\n              Email\r\n            </label>\r\n            <input\r\n              autoComplete=\"off\"\r\n              className=\" blue-grey-text text-darken-4\"\r\n              autoComplete=\"off\"\r\n              type=\"email\"\r\n              id=\"email\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label className=\" grey-text text-lighten-5\" htmlFor=\"password\">\r\n              Password\r\n            </label>\r\n            <input\r\n              autoComplete=\"off\"\r\n              className=\" blue-grey-text text-darken-4\"\r\n              autoComplete=\"off\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button autoComplete=\"off\" className=\"waves-effect waves-light btn\">\r\n              Sign Up\r\n            </button>\r\n            <div className=\"red-text center\">\r\n              {authErr ? <p>{authErr}</p> : null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.firebase.authErr,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signUp: (newUser) => dispatch(signUp(newUser)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../store/actions/projectAction\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: \"\",\r\n    content: \"\",\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n    console.log(this.state);\r\n  };\r\n  handleSubmit = (e) => {\r\n    if (this.state[{}] !== \"\") {\r\n      e.preventDefault();\r\n      this.props.createProject(this.state);\r\n      this.props.history.push(\"/\");\r\n    } else {\r\n      console.log(\"Error\");\r\n    }\r\n  };\r\n  render() {\r\n    const { auth } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"grey lighten-4\">\r\n          <h5 className=\"grey-text text-darken-3\">Create Project</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n          </div>\r\n\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"content\">Content</label>\r\n            <textarea\r\n              id=\"content\"\r\n              className=\"materialize-textarea\"\r\n              onChange={this.handleChange}\r\n            ></textarea>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn grey darken-1 z-depth-0\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\r\n","export const createProject = (project) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    // make async call to database\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth;\r\n    firestore\r\n      .collection(\"projects\")\r\n      .add({\r\n        ...project,\r\n        authorFirstName: profile.firstName,\r\n        authorLastName: profile.lastName,\r\n        author_id: authorId,\r\n        createdAt: new Date().toDateString(),\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"CREATE_PROJECT\", project });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: \"CREATE_PROJECT_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SignUp\";\nimport CreateProject from \"./components/projects/CreateProject\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route path=\"/project/:id\" component={ProjectDetails} />\n          <Route path=\"/signin\" component={SignIn} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/create\" component={CreateProject} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n  authError: null,\r\n};\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_ERROR\":\r\n      return { ...state, authError: \"Login failed\" };\r\n    case \"LOGIN_SUCCESS\":\r\n      console.log(\"login success\");\r\n      return {\r\n        ...state,\r\n        authError: null,\r\n      };\r\n\r\n    case \"SIGNOUT_SUCCESS\":\r\n      console.log(\"signout success\");\r\n      return state;\r\n    case \"SIGNUP_ERROR\":\r\n      return {\r\n        ...state,\r\n        authError: action.err.message,\r\n      };\r\n\r\n    case \"SIGNUP_SUCCESS\":\r\n      console.log(\"signup success\");\r\n      return {\r\n        ...state,\r\n        authError: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","const initState = {\r\n  projects: [\r\n    {\r\n      id: \"1\",\r\n      title: \"some title\",\r\n      content: \"some content\",\r\n    },\r\n    {\r\n      id: \"12\",\r\n      title: \"some title\",\r\n      content: \"some content\",\r\n    },\r\n    {\r\n      id: \"3\",\r\n      title: \"some title\",\r\n      content: \"some content\",\r\n    },\r\n  ],\r\n};\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"CREATE_PROJECT\":\r\n      console.log(\"created project\", action.project);\r\n      return state;\r\n    case \"CREATE_PROJECT_ERROR\":\r\n      console.log(\"created project error\", action.err);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default projectReducer;\r\n","import authReducer from \"./authReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport { combineReducers } from \"redux\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firebase: firebaseReducer,\r\n  firestore: firestoreReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\n//Initialize firebase\r\nvar Config = {\r\n  apiKey: \"AIzaSyAu7U6sRw6JzBa_P-KkSntB4_9fRyDY2dw\",\r\n  authDomain: \"redux-market-34962.firebaseapp.com\",\r\n  databaseURL: \"https://redux-market-34962.firebaseio.com\",\r\n  projectId: \"redux-market-34962\",\r\n  storageBucket: \"redux-market-34962.appspot.com\",\r\n  messagingSenderId: \"814624506446\",\r\n  appId: \"1:814624506446:web:0855085e41a1ff0d96f91f\",\r\n  measurementId: \"G-YQZ7VQ8L28\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(Config);\r\n\r\nfirebase.firestore();\r\n\r\nexport default firebase;\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAu7U6sRw6JzBa_P-KkSntB4_9fRyDY2dw\",\r\n  authDomain: \"redux-market-34962.firebaseapp.com\",\r\n  databaseURL: \"https://redux-market-34962.firebaseio.com\",\r\n  projectId: \"redux-market-34962\",\r\n  storageBucket: \"redux-market-34962.appspot.com\",\r\n  messagingSenderId: \"814624506446\",\r\n  appId: \"1:814624506446:web:0855085e41a1ff0d96f91f\",\r\n  measurementId: \"G-YQZ7VQ8L28\",\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport thunk from \"redux-thunk\";\nimport { getFirestore, reduxFirestore } from \"redux-firestore\";\nimport { ReactReduxFirebaseProvider, getFirebase } from \"react-redux-firebase\";\nimport fbconfig from \"./config/fbConfig\";\nimport { createFirestoreInstance } from \"redux-firestore\";\n\nimport { useSelector } from \"react-redux\";\nimport { isLoaded } from \"react-redux-firebase\";\n\n// react-redux-firebase config\nconst reduxFirebaseConfig = {\n  userProfile: \"users\",\n  useFirestoreForProfile: true,\n  enableRedirectHandling: false,\n  resetBeforeLogin: false,\n};\nconst initialState = {};\nconst middlewares = [thunk.withExtraArgument({ getFirebase, getFirestore })];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n    reduxFirestore(fbconfig)\n  )\n);\n\nconst rrfProps = {\n  firebase,\n  config: reduxFirebaseConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n  userProfile: \"users\", // where profiles are stored in database\n  presence: \"presence\", // where list of online users is stored in database\n  sessions: \"sessions\",\n};\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector((state) => state.firebase.auth);\n  if (!isLoaded(auth)) return <div>splash screen...</div>;\n  return children;\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n        <AuthIsLoaded>\n          <App />\n        </AuthIsLoaded>\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}